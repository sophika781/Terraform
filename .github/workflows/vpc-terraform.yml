name: 'VPC Terraform'

on:
  push:
    branches:
      - "master"
    paths: 
      - "vpc-terraform/**"
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: vpc-terraform

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.ACCESSKEY }}
        aws-secret-access-key: ${{ secrets.SECRETACCESSKEY }}
        aws-region: us-east-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.8 

    - name: Init Main Project
      run: terraform init -backend-config="bucket=${{ secrets.S3_BACKEND_BUCKET}}" -backend-config="key=vpc/${{ secrets.TF_STATE }}" -backend-config="region=us-east-1" -backend-config="dynamodb_table=${{ secrets.DYNAMO_DB_TABLE }}" 

    - name: Terraform Format
      run: terraform fmt -check

    - name: Plan Main Project
      run: terraform plan -var="rds_password=${{ secrets.RDS_PASSWORD }}"

    - name: Apply Main Project
      run: terraform apply -auto-approve -var="rds_password=${{ secrets.RDS_PASSWORD }}"

    - name: Terraform State List
      run: terraform state list

#   - name: Terraform Destroy
#     if: always()
#     run: terraform destroy -auto-approve
