name: 'VPC Terraform'

on:
  push:
    branches:
      - "master"
    paths: 
      - "vpc-terraform/**"
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: vpc-terraform

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.ACCESSKEY }}
        aws-secret-access-key: ${{ secrets.SECRETACCESSKEY }}
        aws-region: us-east-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.8 

    - name: Initialize Backend Setup
      run: terraform -chdir=backend_resources init -reconfigure  

    - name: Plan Backend Resources
      run: terraform -chdir=backend_resources plan
  
    - name: Apply Backend Resources
      run: terraform -chdir=backend_resources apply -auto-approve 

    - name: Wait for S3 bucket to be ready
      run: |
        until aws s3api head-bucket --bucket s3-backend-bucket-sophika 2>/dev/null; do
          echo "Waiting for S3 bucket..."
          sleep 5
        done

    - name: Init Main Project
      run: terraform init -reconfigure

    - name: Terraform Format
      run: terraform fmt -check

    - name: Plan Main Project
      run: terraform plan

    - name: Apply Main Project
      run: terraform apply -auto-approve

    - name: Terraform State List
      run: terraform state list

    - name: Terraform Destroy
      if: always()
      run: terraform destroy -auto-approve

    - name: Empty and delete S3 bucket
      if: always()
      shell: bash
      run: |
        BUCKET="s3-backend-bucket-sophika"
        
        # Get all versions and delete markers in one JSON
        OBJECTS=$(aws s3api list-object-versions \
          --bucket $BUCKET \
          --query='{Objects: Versions[].{Key:Key,VersionId:VersionId} + DeleteMarkers[].{Key:Key,VersionId:VersionId}}')
        
        # Delete if not empty
        if [ "$OBJECTS" != '{"Objects":[]}' ]; then
          aws s3api delete-objects --bucket $BUCKET --delete "$OBJECTS"
        fi
        
        # Remove the bucket
        aws s3 rb s3://$BUCKET

    
        # Remove the bucket itself
        aws s3 rb s3://$BUCKET


    - name: Terraform Destroy Backend Resources
      if: always()
      run: terraform -chdir=backend_resources destroy -auto-approve
